import PushNotification from "react-native-push-notification";
import colors from "../constants/colors";
import PushNotificationIOS from "@react-native-community/push-notification-ios";
import { Language } from "../locales";

const STRINGUPLOADING = {
    ticker: "Ticker",
    bigText: "",
    subText: "SubText",
    title: "Title",
    message: "",
    ongoing: false,
}

const STRINGUPLOADCOMPLETE = {
    ticker: "Ticker",
    bigText: "",
    subText: "SubText",
    title: "Title",
    message: "",
    ongoing: false,
}

const STRINGUPLOADFAIL = {
    ticker: "Ticker",
    bigText: "",
    subText: "SubText",
    title: "Title",
    message: "",
    ongoing: false,
}

let ID = "123";
export default {
    configure() {
        PushNotification.configure({
            // (optional) Called when Token is generated (iOS and Android)
            onRegister: function (token) {
                console.log("TOKEN:", token);
            },

            // (required) Called when a remote is received or opened, or local notification is opened
            onNotification: function (notification) {
                console.log("NOTIFICATION:", notification);

                // process the notification

                // (required) Called when a remote is received or opened, or local notification is opened
                notification.finish(PushNotificationIOS.FetchResult.NoData);
            },

            // IOS ONLY (optional): default: all - Permissions to register.
            permissions: {
                alert: true,
                badge: false,
                sound: true,
            },

            // Should the initial notification be popped automatically
            // default: true
            popInitialNotification: true,

            /**
             * (optional) default: true
             * - Specified if permissions (ios) and token (android and ios) will requested or not,
             * - if not, you must call PushNotificationsHandler.requestPermissions() later
             * - if you are not using remote notification or do not have Firebase installed, use this:
             *     requestPermissions: Platform.OS === 'ios'
             */
            requestPermissions: true,
        });
    },//end of CONFIGURE

    show(type = "uploading" | "complete" | "fail") {
        let STRING = STRINGUPLOADING;

        if (type.toLowerCase() === "complete") {
            STRING = STRINGUPLOADCOMPLETE
        } else if (type.toLowerCase() === "fail") {
            STRING = STRINGUPLOADFAIL
        } else {
            STRING = STRINGUPLOADING;
        }

        PushNotification.localNotification({
            /* Android Only Properties */
            id: ID, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
            ticker: STRING.ticker, // (optional)
            autoCancel: false, // (optional) default: true
            largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
            smallIcon: "ic_launcher", // (optional) default: "ic_notification" with fallback for "ic_launcher"
            bigText: STRING.bigText, // (optional) default: "message" prop
            subText: STRING.subText, // (optional) default: none
            color: colors.primary, // (optional) default: system default
            vibrate: true, // (optional) default: true
            vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
            tag: "some_tag", // (optional) add tag to message
            group: "group", // (optional) add group to message
            ongoing: STRING.ongoing, // (optional) set whether this is an "ongoing" notification
            priority: "high", // (optional) set notification priority, default: high
            visibility: "private", // (optional) set notification visibility, default: private
            importance: "high", // (optional) set notification importance, default: high
            allowWhileIdle: false, // (optional) set notification to work while on doze, default: false
            ignoreInForeground: false, // (optional) if true, the notification will not be visible when the app is in the foreground (useful for parity with how iOS notifications appear)

            /* iOS only properties */
            alertAction: "view", // (optional) default: view
            category: "", // (optional) default: empty string
            userInfo: { id: ID }, // (optional) default: {} (using null throws a JSON value '<null>' error)
            applicationIconBadgeNumber: 1,


            /* iOS and Android properties */
            title: STRING.title, // (optional)
            message: STRING.message, // (required)
            playSound: true, // (optional) default: true
            soundName: "default", // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
            number: 1, // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
            repeatType: "day", // (optional) Repeating interval. Check 'Repeating Notifications' section for more info.
            // actions: '[""]', // (Android only) See the doc for notification actions to know more
        });
    },//end of SHOW
    hide() {
        PushNotification.cancelAllLocalNotifications()

    },//end of HIDE
}